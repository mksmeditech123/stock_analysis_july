# -*- coding: utf-8 -*-
"""stock_market_prediction_final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13O1lcfjF7CM8IHm0gRAxXQCYgx41OdGz
"""

from loaders.base import DataLoader
from loaders.yahoo import YFinanceProvider
from indicators.indicator import *
import matplotlib.pyplot as plt

provider = YFinanceProvider()
loader = DataLoader(provider, asset="AAPL", benchmark_asset="SPY", start_date="2022-01-01")

# Load data
df = loader.load()

df.head()

indicators = [
    VolatilityIndicator(),
    MACDIndicator(),
    RSIIndicator(window=14),
    BollingerBandsIndicator(window=20)
]

for indicator in indicators:
    df = indicator.apply(df)

def plot_bollinger_bands(ax, df: pd.DataFrame):
    """
    Plot Close price with Bollinger Bands.
    """
    ax.plot(df.index, df["Close"], label="Close")
    ax.plot(df.index, df["bollinger_mid"], label="Bollinger Mid")
    ax.plot(df.index, df["bollinger_upper"], label="Upper Band", linestyle='--')
    ax.plot(df.index, df["bollinger_lower"], label="Lower Band", linestyle='--')
    ax.set_title("Price with Bollinger Bands")
    ax.legend()


def plot_volatility(ax, df: pd.DataFrame):
    """
    Plot all volatility_x columns.
    """
    vol_cols = [col for col in df.columns if col.startswith("volatility_")]
    for col in vol_cols:
        ax.plot(df.index, df[col], label=col)
    ax.set_title("Volatility")
    ax.legend()


def plot_macd(ax, df: pd.DataFrame):
    """
    Plot MACD line, signal line, and histogram.
    """
    ax.plot(df.index, df["macd_line"], label="MACD Line")
    ax.plot(df.index, df["macd_signal_line"], label="Signal Line")
    ax.bar(df.index, df["macd_histogram"], label="Histogram", color="gray", alpha=0.5)
    ax.set_title("MACD")
    ax.legend()


def plot_rsi(ax, df: pd.DataFrame):
    """
    Plot RSI with overbought/oversold levels.
    """
    ax.plot(df.index, df["rsi"], label="RSI", color="purple")
    ax.axhline(70, color="red", linestyle="--")
    ax.axhline(30, color="green", linestyle="--")
    ax.set_title("RSI")
    ax.legend()


def plot_close_price(ax, df: pd.DataFrame):
    """
    Plot raw Close price (for reference or other indicators).
    """
    ax.plot(df.index, df["Close"], label="Close", color="black")
    ax.set_title("Price")
    ax.legend()


def plot_indicators(df: pd.DataFrame):
    """
    Plot all technical indicators using dedicated subplots.
    """
    fig, axes = plt.subplots(5, 1, figsize=(12, 18), sharex=True)
    fig.suptitle("Technical Indicators", fontsize=16)

    plot_bollinger_bands(axes[0], df)
    plot_volatility(axes[1], df)
    plot_macd(axes[2], df)
    plot_rsi(axes[3], df)
    plot_close_price(axes[4], df)

    plt.tight_layout(rect=[0, 0.03, 1, 0.95])
    plt.show()

plot_indicators(df)



